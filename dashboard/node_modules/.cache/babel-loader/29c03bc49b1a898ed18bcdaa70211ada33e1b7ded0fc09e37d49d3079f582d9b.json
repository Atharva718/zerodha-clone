{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\zerodha clone\\\\dashboard\\\\src\\\\components\\\\TopBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopBar = () => {\n  _s();\n  const [niftyValue, setNiftyValue] = useState(22124.70); // Initial NIFTY 50 value\n  const [sensexValue, setSensexValue] = useState(73198.10); // Initial SENSEX value\n\n  // Simulate index updates every 3 seconds\n  useEffect(() => {\n    const updateIndices = () => {\n      // Generate random changes for NIFTY 50 (±0.5%)\n      const niftyMaxChange = 0.005; // 0.5% limit\n      const niftyMinChange = -0.005; // -0.5% limit\n      const niftyRandomChange = Math.random() * (niftyMaxChange - niftyMinChange) + niftyMinChange;\n      const newNiftyValue = Math.max(0.01, niftyValue * (1 + niftyRandomChange)).toFixed(2);\n\n      // Generate random changes for SENSEX (±0.5%)\n      const sensexMaxChange = 0.005; // 0.5% limit\n      const sensexMinChange = -0.005; // -0.5% limit\n      const sensexRandomChange = Math.random() * (sensexMaxChange - sensexMinChange) + sensexMinChange;\n      const newSensexValue = Math.max(0.01, sensexValue * (1 + sensexRandomChange)).toFixed(2);\n      setNiftyValue(parseFloat(newNiftyValue));\n      setSensexValue(parseFloat(newSensexValue));\n    };\n    const intervalId = setInterval(updateIndices, 3000); // Update every 3 seconds\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [niftyValue, sensexValue]); // Re-run effect when values change for continuous updates\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topbar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indices-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nifty\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"index\",\n          children: \"NIFTY 50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"index-points\",\n          children: niftyValue.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"percent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensex\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"index\",\n          children: \"SENSEX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"index-points\",\n          children: sensexValue.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"percent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TopBar, \"h1XlTKqrMgIwRxkYTbgMp22u38U=\");\n_c = TopBar;\nexport default TopBar;\nvar _c;\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"names":["React","useState","useEffect","Menu","jsxDEV","_jsxDEV","TopBar","_s","niftyValue","setNiftyValue","sensexValue","setSensexValue","updateIndices","niftyMaxChange","niftyMinChange","niftyRandomChange","Math","random","newNiftyValue","max","toFixed","sensexMaxChange","sensexMinChange","sensexRandomChange","newSensexValue","parseFloat","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/zerodha clone/dashboard/src/components/TopBar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Menu from \"./Menu\";\n\nconst TopBar = () => {\n  const [niftyValue, setNiftyValue] = useState(22124.70); // Initial NIFTY 50 value\n  const [sensexValue, setSensexValue] = useState(73198.10); // Initial SENSEX value\n\n  // Simulate index updates every 3 seconds\n  useEffect(() => {\n    const updateIndices = () => {\n      // Generate random changes for NIFTY 50 (±0.5%)\n      const niftyMaxChange = 0.005; // 0.5% limit\n      const niftyMinChange = -0.005; // -0.5% limit\n      const niftyRandomChange = Math.random() * (niftyMaxChange - niftyMinChange) + niftyMinChange;\n      const newNiftyValue = Math.max(0.01, niftyValue * (1 + niftyRandomChange)).toFixed(2);\n\n      // Generate random changes for SENSEX (±0.5%)\n      const sensexMaxChange = 0.005; // 0.5% limit\n      const sensexMinChange = -0.005; // -0.5% limit\n      const sensexRandomChange = Math.random() * (sensexMaxChange - sensexMinChange) + sensexMinChange;\n      const newSensexValue = Math.max(0.01, sensexValue * (1 + sensexRandomChange)).toFixed(2);\n\n      setNiftyValue(parseFloat(newNiftyValue));\n      setSensexValue(parseFloat(newSensexValue));\n    };\n\n    const intervalId = setInterval(updateIndices, 3000); // Update every 3 seconds\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, [niftyValue, sensexValue]); // Re-run effect when values change for continuous updates\n\n  return (\n    <div className=\"topbar-container\">\n      <div className=\"indices-container\">\n        <div className=\"nifty\">\n          <p className=\"index\">NIFTY 50</p>\n          <p className=\"index-points\">{niftyValue.toLocaleString()}</p>\n          <p className=\"percent\"></p>\n        </div>\n        <div className=\"sensex\">\n          <p className=\"index\">SENSEX</p>\n          <p className=\"index-points\">{sensexValue.toLocaleString()}</p>\n          <p className=\"percent\"></p>\n        </div>\n      </div>\n      <Menu />\n    </div>\n  );\n};\n\nexport default TopBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}